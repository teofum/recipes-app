generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider      = "mysql"
  url           = env("DATABASE_URL")
  relationMode  = "prisma"
}

model File {
  id            String    @id @default(uuid())
  blob          Bytes

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  image         Image?
}

model Image {
  file          File      @relation(fields: [fileId], references: [id])
  fileId        String    @unique

  contentType   String
  altText       String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model User {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @unique
  username      String    @unique
  displayName   String
  recipes       Recipe[]
}

model Auth {
  id            String    @id @default(uuid())
  username      String    @unique
  passwordHash  String
}

model Recipe {
  id            String                  @id @default(uuid())
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
  author        User                    @relation(fields: [authorId], references: [id])
  authorId      String
  name          String
  description   String                  @db.Text // A brief description
  prepTime      Int                     // Time to make the recipe, in minutes
  imageUrl      String

  ingredients   IngredientsOnRecipes[]
  steps         RecipeStep[]

  @@index([authorId])
}

model Ingredient {
  id            String                  @id @default(uuid())
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
  recipes       IngredientsOnRecipes[]

  name          String                  @unique
}

model IngredientsOnRecipes {
  recipe        Recipe      @relation(fields: [recipeId], references: [id])
  recipeId      String
  ingredient    Ingredient  @relation(fields: [ingredientId], references: [id])
  ingredientId  String

  amount        Float
  unit          Unit        @default(UNITS)

  @@id([recipeId, ingredientId])
  @@index([recipeId])
  @@index([ingredientId])
}

enum Unit {
  GRAMS
  LITERS
  UNITS
}

model RecipeStep {
  id            String    @id @default(uuid())
  recipe        Recipe    @relation(fields: [recipeId], references: [id])
  recipeId      String

  stepNumber    Int
  content       String    @db.Text

  @@index([recipeId])
}
